% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinyQC.R
\name{shinyQC}
\alias{shinyQC}
\title{Shiny application for initial QC exploration of -omics data sets}
\usage{
shinyQC(se, app_server = FALSE)
}
\arguments{
\item{se}{`SummarizedExperiment` object (can be omitted)}

\item{app_server}{`logical` (set to `TRUE` if run under a server environment)}
}
\description{
The shiny application allows to explore -omics
data sets especially with a focus on quality control. `shinyQC` gives
information on the type of samples included (if this was previously
specified within the `SummarizedExperiment` object). It gives information
on the number of missing and measured values across features and across
sets (e.g. quality control samples, control, and treatment groups, only
displayed for `SummarizedExperiment` objects that contain missing values).
`shinyQC` includes functionality to display (count/intensity) values across samples
(to detect drifts in intensity values during the measurement), to display
mean-sd plots, MA plots, ECDF plots, and distance plots between samples.
`shinyQC` includes functionality to perform dimensionality reduction
(currently limited to PCA, PCoA, NMDS, tSNE, and UMAP). Additionally,
it includes functionality to perform differential expression analysis
(currently limited to moderated t-tests and the Wald test).
}
\details{
`shinyQC` allows to subset the supplied `SummarizedExperiment` object. On
exit of the shiny application, the following objects are returned in a
list: the matrix with (count/intensity) values for `raw`, `normalized`, `transformed`, 
`batch corrected` (and `imputed`). The object will only returned if 
`app_server = FALSE`.

If the `se` argument is omitted the app will load an interface that allows 
for data upload.
}
\examples{
library(dplyr)
library(SummarizedExperiment)

## create se
a <- matrix(1:100, nrow = 10, ncol = 10, 
            dimnames = list(1:10, paste("sample", 1:10)))
a[c(1, 5, 8), 1:5] <- NA
set.seed(1)
a <- a + rnorm(100)
cD <- data.frame(name = colnames(a), type = c(rep("1", 5), rep("2", 5)))
rD <- data.frame(spectra = rownames(a))
se <- SummarizedExperiment(assay = a, rowData = rD, colData = cD)

\dontrun{shinyQC(se)}

}
